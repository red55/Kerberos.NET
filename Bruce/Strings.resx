<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BannerDescription" xml:space="preserve">
    <value>Command Line tooling for the Kerberos.NET library.</value>
  </data>
  <data name="ComandLine_KConfig_Config" xml:space="preserve">
    <value>Kerberos Configuration File</value>
  </data>
  <data name="CommandLine_CachePath" xml:space="preserve">
    <value>Cache</value>
  </data>
  <data name="CommandLine_Commands" xml:space="preserve">
    <value>Commands</value>
  </data>
  <data name="CommandLine_ConfigPath" xml:space="preserve">
    <value>Default Configuration Path</value>
  </data>
  <data name="CommandLine_ConfigPath_Actual" xml:space="preserve">
    <value>Runtime Configuration Path</value>
  </data>
  <data name="CommandLine_Config_DotHelp" xml:space="preserve">
    <value>Properties of configuration sections can be accessed through the dot operator (e.g. section.property).</value>
  </data>
  <data name="CommandLine_Config_DotHelpEscaped" xml:space="preserve">
    <value>Properties that would contain dots can be escaped with quotes (e.g. section."realm.name".property).</value>
  </data>
  <data name="CommandLine_Config_Invalid" xml:space="preserve">
    <value>Configuration could not be processed</value>
  </data>
  <data name="CommandLine_Config_SetEquals" xml:space="preserve">
    <value>Set a configuration value.</value>
  </data>
  <data name="CommandLine_Config_SetEqualsNull" xml:space="preserve">
    <value>Remove a configuration value.</value>
  </data>
  <data name="CommandLine_Config_SetEqualsPlus" xml:space="preserve">
    <value>Append a new value or make the property into a list of values.</value>
  </data>
  <data name="CommandLine_Config_SetEqualsSpace" xml:space="preserve">
    <value>Set a configuration value.</value>
  </data>
  <data name="CommandLine_Config_SetEqualsSpacePlus" xml:space="preserve">
    <value>Append a new value or make the property into a list of values.</value>
  </data>
  <data name="CommandLine_Config_SetSpaceNull" xml:space="preserve">
    <value>Remove a configuration value.</value>
  </data>
  <data name="CommandLine_Defaults" xml:space="preserve">
    <value>User Default Values</value>
  </data>
  <data name="CommandLine_Example" xml:space="preserve">
    <value>Example</value>
  </data>
  <data name="CommandLine_KerberosConfig" xml:space="preserve">
    <value>Set or review configuration settings at the default path.</value>
  </data>
  <data name="CommandLine_KerberosConfigCommand_All" xml:space="preserve">
    <value>Show all configuration options including default values.</value>
  </data>
  <data name="CommandLine_KerberosConfigCommand_Config" xml:space="preserve">
    <value>Provide a path to a particular configuration file.</value>
  </data>
  <data name="CommandLine_KerberosConstrainedDelegationCommand_Delegated" xml:space="preserve">
    <value>The Service Principal Name of the backend service that should receive the delegated ticket.</value>
  </data>
  <data name="CommandLine_KerberosConstrainedDelegationCommand_Help" xml:space="preserve">
    <value>Display this help text.</value>
  </data>
  <data name="CommandLine_KerberosConstrainedDelegationCommand_Realm" xml:space="preserve">
    <value>Realm of the client for authentication.</value>
  </data>
  <data name="CommandLine_KerberosConstrainedDelegationCommand_ServicePrincipalName" xml:space="preserve">
    <value>The Service Principal Name of the middle box.</value>
  </data>
  <data name="CommandLine_KerberosConstrainedDelegationCommand_ServicePrincipalNamePassword" xml:space="preserve">
    <value>The password for the Service Principal of the middle box.</value>
  </data>
  <data name="CommandLine_KerberosConstrainedDelegationCommand_ServicePrincipalSamAccountName" xml:space="preserve">
    <value>The sAMAccountName of the Service Principal of the middle box.</value>
  </data>
  <data name="CommandLine_KerberosConstrainedDelegationCommand_UserPrincipalName" xml:space="preserve">
    <value>User Principal Name for client authentication.</value>
  </data>
  <data name="CommandLine_KerberosConstrainedDelegationCommand_Verbose" xml:space="preserve">
    <value>Display additional logging data for each stage during execution.</value>
  </data>
  <data name="CommandLine_KerberosDecode" xml:space="preserve">
    <value>Launch a GUI to decode Kerberos tickets.</value>
  </data>
  <data name="CommandLine_KerberosDestroy" xml:space="preserve">
    <value>Delete the ticket cache.</value>
  </data>
  <data name="CommandLine_KerberosDestroyCommand_Cache" xml:space="preserve">
    <value>Provide a path to a particular cache file.</value>
  </data>
  <data name="CommandLine_KerberosDestroy_Deleted" xml:space="preserve">
    <value>Cache file has been deleted.</value>
  </data>
  <data name="CommandLine_KerberosDestroy_Error" xml:space="preserve">
    <value>Failed to delete cache file</value>
  </data>
  <data name="CommandLine_KerberosHelp" xml:space="preserve">
    <value>Provides help information about commands.</value>
  </data>
  <data name="CommandLine_KerberosHelpCommand_HelpCommand" xml:space="preserve">
    <value>Provide the name of the command to list helpful information about the command.</value>
  </data>
  <data name="CommandLine_KerberosInit" xml:space="preserve">
    <value>Obtain a cache a Kerberos Ticket-Granting-Ticket.</value>
  </data>
  <data name="CommandLine_KerberosInitCommand_Anonymous" xml:space="preserve">
    <value>Request an anonymous ticket.</value>
  </data>
  <data name="CommandLine_KerberosInitCommand_ArmorCache" xml:space="preserve">
    <value>Provide the name of a cache used to armor the current request.</value>
  </data>
  <data name="CommandLine_KerberosInitCommand_Cache" xml:space="preserve">
    <value>Provide the name of a cache to store and retrieve tickets.</value>
  </data>
  <data name="CommandLine_KerberosInitCommand_Canonicalize" xml:space="preserve">
    <value>Requests canonicalization of the ticket principal name.</value>
  </data>
  <data name="CommandLine_KerberosInitCommand_Certificate" xml:space="preserve">
    <value>Locate a certificate and use PKINIT to authenticate the user.</value>
  </data>
  <data name="CommandLine_KerberosInitCommand_Config" xml:space="preserve">
    <value>Provide the path to a configuration to use for initialization.</value>
  </data>
  <data name="CommandLine_KerberosInitCommand_CredNotFound" xml:space="preserve">
    <value>Error: Credential not found</value>
  </data>
  <data name="CommandLine_KerberosInitCommand_DomainRequired" xml:space="preserve">
    <value>A realm cannot be determined based on the configuration or credential information.</value>
  </data>
  <data name="CommandLine_KerberosInitCommand_Enterprise" xml:space="preserve">
    <value>Treat the principal name as an enterprise name.</value>
  </data>
  <data name="CommandLine_KerberosInitCommand_ETypes" xml:space="preserve">
    <value>Specify the encryption types that should be used in preferred order.</value>
  </data>
  <data name="CommandLine_KerberosInitCommand_Extension" xml:space="preserve">
    <value>Pass values to Kerberos extensions.</value>
  </data>
  <data name="CommandLine_KerberosInitCommand_ExtraAddr" xml:space="preserve">
    <value>Include additional addresses in the ticket request.</value>
  </data>
  <data name="CommandLine_KerberosInitCommand_Forward" xml:space="preserve">
    <value>Request a forwardable ticket.</value>
  </data>
  <data name="CommandLine_KerberosInitCommand_IncludeAddresses" xml:space="preserve">
    <value>Request a ticket with addresses.</value>
  </data>
  <data name="CommandLine_KerberosInitCommand_KdcHostname" xml:space="preserve">
    <value>Specify the KDC that should process this request.</value>
  </data>
  <data name="CommandLine_KerberosInitCommand_Keytab" xml:space="preserve">
    <value>Obtain a ticket using the provided keytab.</value>
  </data>
  <data name="CommandLine_KerberosInitCommand_LifeTime" xml:space="preserve">
    <value>Request a ticket with the provided lifetime.</value>
  </data>
  <data name="CommandLine_KerberosInitCommand_NoForward" xml:space="preserve">
    <value>Do not request a forwardable ticket.</value>
  </data>
  <data name="CommandLine_KerberosInitCommand_NoProxy" xml:space="preserve">
    <value>Do not request a proxiable ticket.</value>
  </data>
  <data name="CommandLine_KerberosInitCommand_Password" xml:space="preserve">
    <value>Optionally provide the password to authenticate the user.</value>
  </data>
  <data name="CommandLine_KerberosInitCommand_Proxy" xml:space="preserve">
    <value>Request a proxiable ticket.</value>
  </data>
  <data name="CommandLine_KerberosInitCommand_RealmName" xml:space="preserve">
    <value>Provide the realm name to authenticate against.</value>
  </data>
  <data name="CommandLine_KerberosInitCommand_Renew" xml:space="preserve">
    <value>Renew the requested TGT.</value>
  </data>
  <data name="CommandLine_KerberosInitCommand_Renewable" xml:space="preserve">
    <value>Request a ticket that is renewable up to renewable-lifetime or infinite lifetime.</value>
  </data>
  <data name="CommandLine_KerberosInitCommand_RenewLifetime" xml:space="preserve">
    <value>Request a ticket that is renewable up to the requested lifetime.</value>
  </data>
  <data name="CommandLine_KerberosInitCommand_RequestPac" xml:space="preserve">
    <value>Indicate whether a PAC should be requested during authentication.</value>
  </data>
  <data name="CommandLine_KerberosInitCommand_Reset" xml:space="preserve">
    <value>Reset the connection cache.</value>
  </data>
  <data name="CommandLine_KerberosInitCommand_Servicename" xml:space="preserve">
    <value>Specify a service name to to use when getting tickets.</value>
  </data>
  <data name="CommandLine_KerberosInitCommand_StartTime" xml:space="preserve">
    <value>Request a ticket starting from the provided time.</value>
  </data>
  <data name="CommandLine_KerberosInitCommand_Usekeytab" xml:space="preserve">
    <value>Obtain a ticket using the keytab located in the default location.</value>
  </data>
  <data name="CommandLine_KerberosInitCommand_UserPrincipalName" xml:space="preserve">
    <value>The principal name to use otherwise uses the current system user.</value>
  </data>
  <data name="CommandLine_KerberosInitCommand_Validate" xml:space="preserve">
    <value>Request the TGT be sent to the KDC for validation.</value>
  </data>
  <data name="CommandLine_KerberosInitCommand_Verbose" xml:space="preserve">
    <value>Display verbose output.</value>
  </data>
  <data name="CommandLine_KerberosKeytab" xml:space="preserve">
    <value>View, create, and modify keytab files.</value>
  </data>
  <data name="CommandLine_KerberosKeytabCommand_Add" xml:space="preserve">
    <value>Add a new key to the file.</value>
  </data>
  <data name="CommandLine_KerberosKeytabCommand_Delete" xml:space="preserve">
    <value>Delete the keytab file.</value>
  </data>
  <data name="CommandLine_KerberosKeytabCommand_EType" xml:space="preserve">
    <value>Optioanlly specify which Encryption Types should have keys generated.</value>
  </data>
  <data name="CommandLine_KerberosKeytabCommand_File" xml:space="preserve">
    <value>The path of the keytab file to create, modify, or view.</value>
  </data>
  <data name="CommandLine_KerberosKeytabCommand_Host" xml:space="preserve">
    <value>The sAMAccountName if the principal is a service account with SPN.</value>
  </data>
  <data name="CommandLine_KerberosKeytabCommand_Key" xml:space="preserve">
    <value>Optionally provide the key as a base64 encoded value.</value>
  </data>
  <data name="CommandLine_KerberosKeytabCommand_Offline" xml:space="preserve">
    <value>Do not attempt to get logon information from the KDC.</value>
  </data>
  <data name="CommandLine_KerberosKeytabCommand_Password" xml:space="preserve">
    <value>Optionally provide the password of the principal.</value>
  </data>
  <data name="CommandLine_KerberosKeytabCommand_Principal" xml:space="preserve">
    <value>The Principal Name (user or service) of the key to add.</value>
  </data>
  <data name="CommandLine_KerberosKeytabCommand_PType" xml:space="preserve">
    <value>Optionally specify type of principal name to use instead of detecting format.</value>
  </data>
  <data name="CommandLine_KerberosKeytabCommand_Realm" xml:space="preserve">
    <value>The realm of the principal of the key to add.</value>
  </data>
  <data name="CommandLine_KerberosKeytabCommand_Salt" xml:space="preserve">
    <value>Provide the salt used to derive the key instead of computing it.</value>
  </data>
  <data name="CommandLine_KerberosKeytabCommand_Show" xml:space="preserve">
    <value>Show the key when viewing details about the file.</value>
  </data>
  <data name="CommandLine_KerberosKeytabCommand_Verbose" xml:space="preserve">
    <value>Display additional logging information.</value>
  </data>
  <data name="CommandLine_KerberosKeytabCommand_Verify" xml:space="preserve">
    <value>Verify the generated keytab can be used to authenticate a principal.</value>
  </data>
  <data name="CommandLine_KerberosKeytabCommand_VerifyFailedCred" xml:space="preserve">
    <value>Verification of the keytab failed because authentication failed. Maybe the password is wrong?</value>
  </data>
  <data name="CommandLine_KerberosKeytab_EType" xml:space="preserve">
    <value>Encryption Type</value>
  </data>
  <data name="CommandLine_KerberosKeytab_FileDeleted" xml:space="preserve">
    <value>Keytab file deleted</value>
  </data>
  <data name="CommandLine_KerberosKeytab_FileVersion" xml:space="preserve">
    <value>File Version</value>
  </data>
  <data name="CommandLine_KerberosKeytab_KerbVersion" xml:space="preserve">
    <value>Kerberos Version</value>
  </data>
  <data name="CommandLine_KerberosKeytab_Key" xml:space="preserve">
    <value>Encoded Key Value</value>
  </data>
  <data name="CommandLine_KerberosKeytab_KeyLength" xml:space="preserve">
    <value>Key Length</value>
  </data>
  <data name="CommandLine_KerberosKeytab_Keys" xml:space="preserve">
    <value>Keys in File</value>
  </data>
  <data name="CommandLine_KerberosKeytab_KeyVersion" xml:space="preserve">
    <value>Key Version</value>
  </data>
  <data name="CommandLine_KerberosKeytab_PrincipalName" xml:space="preserve">
    <value>Principal Name</value>
  </data>
  <data name="CommandLine_KerberosKeytab_TimeStamp" xml:space="preserve">
    <value>Timestamp</value>
  </data>
  <data name="CommandLine_KerberosKeytab_UnknownFile" xml:space="preserve">
    <value>File not found: {0}</value>
  </data>
  <data name="CommandLine_KerberosList" xml:space="preserve">
    <value>Displays the current list of tickets in the cache.</value>
  </data>
  <data name="CommandLine_KerberosListCommand_Cache" xml:space="preserve">
    <value>Display the contents of the provided cache name.</value>
  </data>
  <data name="CommandLine_KerberosListCommand_DescribeClient" xml:space="preserve">
    <value>Show client debug information</value>
  </data>
  <data name="CommandLine_KerberosListCommand_Get" xml:space="preserve">
    <value>Get a service ticket for the provided SPN.</value>
  </data>
  <data name="CommandLine_KerberosListCommand_ListCaches" xml:space="preserve">
    <value>List all the caches for the current user.</value>
  </data>
  <data name="CommandLine_KerberosListCommand_Purge" xml:space="preserve">
    <value>Remove all cached tickets.</value>
  </data>
  <data name="CommandLine_KerberosListCommand_ShortFlags" xml:space="preserve">
    <value>Display ticket flags in short-form.</value>
  </data>
  <data name="CommandLine_KerberosListCommand_ShowTgt" xml:space="preserve">
    <value>Show the TGT of the current user.</value>
  </data>
  <data name="CommandLine_KerberosListCommand_Test" xml:space="preserve">
    <value>Verify a Ticket-Granting-Ticket is present and valid in the cache.</value>
  </data>
  <data name="CommandLine_KerberosListCommand_Verbose" xml:space="preserve">
    <value>Displays all data about the cache.</value>
  </data>
  <data name="CommandLine_KerberosPing" xml:space="preserve">
    <value>Locate and ping a KDC for the provided user to get pre-auth details.</value>
  </data>
  <data name="CommandLine_KerberosPing_Realm" xml:space="preserve">
    <value>Indicate which realm the queried user belongs.</value>
  </data>
  <data name="CommandLine_KerberosPing_UserPrincipalName" xml:space="preserve">
    <value>The User Principal Name used to ping the KDC</value>
  </data>
  <data name="CommandLine_KerberosPing_Verbose" xml:space="preserve">
    <value>Include detailed logging information about the ping request.</value>
  </data>
  <data name="CommandLine_KerberosWhoAmI" xml:space="preserve">
    <value>Displays details about the current authenticated user.</value>
  </data>
  <data name="CommandLine_KerberosWhoAmI_All" xml:space="preserve">
    <value>Display all available details about the current user.</value>
  </data>
  <data name="CommandLine_KerberosWhoAmI_Cache" xml:space="preserve">
    <value>Optionally provide the path to the ticket cache file of the user to look up.</value>
  </data>
  <data name="CommandLine_KerberosWhoAmI_Claims" xml:space="preserve">
    <value>Display claims for the current user.</value>
  </data>
  <data name="CommandLine_KerberosWhoAmI_Groups" xml:space="preserve">
    <value>Display group membership about the current user.</value>
  </data>
  <data name="CommandLine_KerberosWhoAmI_Logon" xml:space="preserve">
    <value>Display logon information about the current user.</value>
  </data>
  <data name="CommandLine_KerberosWhoAmI_Verbose" xml:space="preserve">
    <value>Include detailed logging information in the whoami request.</value>
  </data>
  <data name="CommandLine_KInit_PassPrompt" xml:space="preserve">
    <value>Password for {0}: </value>
  </data>
  <data name="CommandLine_KList_BranchId" xml:space="preserve">
    <value>Branch Id</value>
  </data>
  <data name="CommandLine_KList_Client" xml:space="preserve">
    <value>Client</value>
  </data>
  <data name="CommandLine_KList_ClientDetails" xml:space="preserve">
    <value>Internal Client Details</value>
  </data>
  <data name="CommandLine_KList_Count" xml:space="preserve">
    <value>Ticket Count</value>
  </data>
  <data name="CommandLine_KList_End" xml:space="preserve">
    <value>End Time</value>
  </data>
  <data name="CommandLine_KList_Flags" xml:space="preserve">
    <value>Flags</value>
  </data>
  <data name="CommandLine_KList_KdcCalled" xml:space="preserve">
    <value>KDC Called</value>
  </data>
  <data name="CommandLine_KList_RenewTime" xml:space="preserve">
    <value>Renew Until</value>
  </data>
  <data name="CommandLine_KList_Server" xml:space="preserve">
    <value>Server</value>
  </data>
  <data name="CommandLine_KList_SessionEType" xml:space="preserve">
    <value>Session Key Type</value>
  </data>
  <data name="CommandLine_KList_Start" xml:space="preserve">
    <value>Start Time</value>
  </data>
  <data name="CommandLine_KList_TicketEType" xml:space="preserve">
    <value>Ticket EType</value>
  </data>
  <data name="CommandLine_KPasswd_NewPassPrompt" xml:space="preserve">
    <value>New password for {0}:</value>
  </data>
  <data name="CommandLine_KPasswd_NewPassVerifyPrompt" xml:space="preserve">
    <value>Verify new password for {0}:</value>
  </data>
  <data name="CommandLine_KPasswd_PassDoesNotMatch" xml:space="preserve">
    <value>New password and it's confirmation does not match.</value>
  </data>
  <data name="CommandLine_UnknownCommand" xml:space="preserve">
    <value>The command '{0}' could not be found.</value>
  </data>
  <data name="CommandLine_Usage" xml:space="preserve">
    <value>Usage</value>
  </data>
  <data name="CommandLine_Version" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="CommandLine_WhoAmI_Claims" xml:space="preserve">
    <value>Authenticator Claims</value>
  </data>
  <data name="CommandLine_WhoAmI_Groups" xml:space="preserve">
    <value>Groups</value>
  </data>
  <data name="CommandLine_WhoAmI_NoTgt" xml:space="preserve">
    <value>User is not logged on. Try kinit first.</value>
  </data>
  <data name="CommandLine_WhoAmI_UserName" xml:space="preserve">
    <value>UserName</value>
  </data>
  <data name="UnknownCommand" xml:space="preserve">
    <value>'{0}' is an unknown command. Try typing 'help' for a list of all commands.</value>
  </data>
</root>